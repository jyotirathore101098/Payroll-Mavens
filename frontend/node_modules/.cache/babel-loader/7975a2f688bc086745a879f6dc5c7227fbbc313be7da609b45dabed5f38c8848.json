{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:3000/api/payslips\";\nconst getAuthHeaders = () => ({\n  headers: {\n    Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n  }\n});\n\n// Fetch payslips\nexport const fetchPayslips = async () => {\n  const res = await axios.get(`${API_BASE_URL}/my`, getAuthHeaders());\n  return res.data;\n};\n\n// Insert payslip\nexport const insertPayslip = async (userId, monthYear) => {\n  const prRes = await axios.get(\"http://localhost:3000/api/payroll-runs\", getAuthHeaders());\n  const runs = Array.isArray(prRes.data) ? prRes.data : [];\n  const run = runs.find(r => String(r.UserID) === String(userId) && r.MonthYear === monthYear);\n  if (!run) throw new Error(\"No payroll run found for this user and month.\");\n  await axios.post(`${API_BASE_URL}/generate`, {\n    payrollRunId: run.PayrollRunID\n  }, getAuthHeaders());\n};\n\n// Delete payslip\nexport const deletePayslip = async payslipId => {\n  await axios.delete(`${API_BASE_URL}/${payslipId}`, getAuthHeaders());\n};\n\n// Download payslip\nexport const downloadPayslip = async (payslipId, userId, monthYear) => {\n  const response = await axios.get(`${API_BASE_URL}/download/${payslipId}`, {\n    ...getAuthHeaders(),\n    responseType: \"blob\"\n  });\n  const url = window.URL.createObjectURL(new Blob([response.data], {\n    type: \"application/pdf\"\n  }));\n  const link = document.createElement(\"a\");\n  link.href = url;\n  link.setAttribute(\"download\", `Payslip_${userId}_${monthYear}.pdf`);\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n};","map":{"version":3,"names":["axios","API_BASE_URL","getAuthHeaders","headers","Authorization","localStorage","getItem","fetchPayslips","res","get","data","insertPayslip","userId","monthYear","prRes","runs","Array","isArray","run","find","r","String","UserID","MonthYear","Error","post","payrollRunId","PayrollRunID","deletePayslip","payslipId","delete","downloadPayslip","response","responseType","url","window","URL","createObjectURL","Blob","type","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild"],"sources":["/Users/jyotirathore101098/Documents/Payroll_Mavens/frontend/src/pages/payslips/payslipService.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_BASE_URL = \"http://localhost:3000/api/payslips\";\n\nconst getAuthHeaders = () => ({\n  headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n});\n\n// Fetch payslips\nexport const fetchPayslips = async () => {\n  const res = await axios.get(`${API_BASE_URL}/my`, getAuthHeaders());\n  return res.data;\n};\n\n// Insert payslip\nexport const insertPayslip = async (userId, monthYear) => {\n  const prRes = await axios.get(\"http://localhost:3000/api/payroll-runs\", getAuthHeaders());\n  const runs = Array.isArray(prRes.data) ? prRes.data : [];\n  const run = runs.find((r) => String(r.UserID) === String(userId) && r.MonthYear === monthYear);\n  if (!run) throw new Error(\"No payroll run found for this user and month.\");\n  await axios.post(`${API_BASE_URL}/generate`, { payrollRunId: run.PayrollRunID }, getAuthHeaders());\n};\n\n// Delete payslip\nexport const deletePayslip = async (payslipId) => {\n  await axios.delete(`${API_BASE_URL}/${payslipId}`, getAuthHeaders());\n};\n\n// Download payslip\nexport const downloadPayslip = async (payslipId, userId, monthYear) => {\n  const response = await axios.get(`${API_BASE_URL}/download/${payslipId}`, {\n    ...getAuthHeaders(),\n    responseType: \"blob\",\n  });\n  const url = window.URL.createObjectURL(new Blob([response.data], { type: \"application/pdf\" }));\n  const link = document.createElement(\"a\");\n  link.href = url;\n  link.setAttribute(\"download\", `Payslip_${userId}_${monthYear}.pdf`);\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,oCAAoC;AAEzD,MAAMC,cAAc,GAAGA,CAAA,MAAO;EAC5BC,OAAO,EAAE;IAAEC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAAG;AACtE,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,MAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGR,YAAY,KAAK,EAAEC,cAAc,CAAC,CAAC,CAAC;EACnE,OAAOM,GAAG,CAACE,IAAI;AACjB,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAOC,MAAM,EAAEC,SAAS,KAAK;EACxD,MAAMC,KAAK,GAAG,MAAMd,KAAK,CAACS,GAAG,CAAC,wCAAwC,EAAEP,cAAc,CAAC,CAAC,CAAC;EACzF,MAAMa,IAAI,GAAGC,KAAK,CAACC,OAAO,CAACH,KAAK,CAACJ,IAAI,CAAC,GAAGI,KAAK,CAACJ,IAAI,GAAG,EAAE;EACxD,MAAMQ,GAAG,GAAGH,IAAI,CAACI,IAAI,CAAEC,CAAC,IAAKC,MAAM,CAACD,CAAC,CAACE,MAAM,CAAC,KAAKD,MAAM,CAACT,MAAM,CAAC,IAAIQ,CAAC,CAACG,SAAS,KAAKV,SAAS,CAAC;EAC9F,IAAI,CAACK,GAAG,EAAE,MAAM,IAAIM,KAAK,CAAC,+CAA+C,CAAC;EAC1E,MAAMxB,KAAK,CAACyB,IAAI,CAAC,GAAGxB,YAAY,WAAW,EAAE;IAAEyB,YAAY,EAAER,GAAG,CAACS;EAAa,CAAC,EAAEzB,cAAc,CAAC,CAAC,CAAC;AACpG,CAAC;;AAED;AACA,OAAO,MAAM0B,aAAa,GAAG,MAAOC,SAAS,IAAK;EAChD,MAAM7B,KAAK,CAAC8B,MAAM,CAAC,GAAG7B,YAAY,IAAI4B,SAAS,EAAE,EAAE3B,cAAc,CAAC,CAAC,CAAC;AACtE,CAAC;;AAED;AACA,OAAO,MAAM6B,eAAe,GAAG,MAAAA,CAAOF,SAAS,EAAEjB,MAAM,EAAEC,SAAS,KAAK;EACrE,MAAMmB,QAAQ,GAAG,MAAMhC,KAAK,CAACS,GAAG,CAAC,GAAGR,YAAY,aAAa4B,SAAS,EAAE,EAAE;IACxE,GAAG3B,cAAc,CAAC,CAAC;IACnB+B,YAAY,EAAE;EAChB,CAAC,CAAC;EACF,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACN,QAAQ,CAACtB,IAAI,CAAC,EAAE;IAAE6B,IAAI,EAAE;EAAkB,CAAC,CAAC,CAAC;EAC9F,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;EACxCF,IAAI,CAACG,IAAI,GAAGT,GAAG;EACfM,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE,WAAWhC,MAAM,IAAIC,SAAS,MAAM,CAAC;EACnE4B,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;EAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;EACZN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,IAAI,CAAC;AACjC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}