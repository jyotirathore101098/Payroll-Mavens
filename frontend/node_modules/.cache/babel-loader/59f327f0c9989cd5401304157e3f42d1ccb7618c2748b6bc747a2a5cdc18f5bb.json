{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:3000/api/payroll-runs\";\nconst API_BASE_PAYROLL = \"http://localhost:3000/api/payroll-base\";\nconst API_BASE_LEAVES = \"http://localhost:3000/api/leaves\";\nconst API_BASE_ADJUSTMENTS = \"http://localhost:3000/api/adjustments\";\nconst API_BASE_COMPLIANCE = \"http://localhost:3000/api/compliance\";\nconst getToken = () => localStorage.getItem(\"token\");\nexport const fetchRuns = async () => {\n  const res = await axios.get(API_BASE_URL, {\n    headers: {\n      Authorization: `Bearer ${getToken()}`\n    }\n  });\n  return res.data;\n};\nexport const insertRun = async data => {\n  return axios.post(API_BASE_URL, data, {\n    headers: {\n      Authorization: `Bearer ${getToken()}`\n    }\n  });\n};\nexport const deleteRun = async id => {\n  return axios.delete(`${API_BASE_URL}/${id}`, {\n    headers: {\n      Authorization: `Bearer ${getToken()}`\n    }\n  });\n};\n\n// Payroll Preview Calculation\nexport const fetchPreview = async (userId, monthYear) => {\n  var _pfRes$data$Value, _pfRes$data, _esiRes$data$Value, _esiRes$data, _tdsRes$data$Value, _tdsRes$data;\n  const token = getToken();\n\n  // Payroll base\n  const baseRes = await axios.get(`${API_BASE_PAYROLL}/${userId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  const base = baseRes.data;\n\n  // Leaves\n  const leaveRes = await axios.get(`${API_BASE_LEAVES}/${userId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  const leaves = Array.isArray(leaveRes.data) ? leaveRes.data.filter(l => l.MonthYear === monthYear) : [];\n  const lop = leaves.filter(l => l.LeaveType === \"LOP\").reduce((sum, l) => sum + Number(l.LeaveDays), 0);\n\n  // Adjustments\n  const adjRes = await axios.get(`${API_BASE_ADJUSTMENTS}/${userId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  const adjustments = Array.isArray(adjRes.data) ? adjRes.data.filter(a => a.MonthYear === monthYear) : [];\n  const bonus = adjustments.filter(a => a.AdjustmentType === \"Bonus\").reduce((sum, a) => sum + Number(a.Amount), 0);\n  const deduction = adjustments.filter(a => a.AdjustmentType === \"Deduction\").reduce((sum, a) => sum + Number(a.Amount), 0);\n\n  // Compliance rules (PF, ESI, TDS rates)\n  const pfRes = await axios.get(`${API_BASE_COMPLIANCE}/rule/PF`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  const esiRes = await axios.get(`${API_BASE_COMPLIANCE}/rule/ESI`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  const tdsRes = await axios.get(`${API_BASE_COMPLIANCE}/rule/TDS`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  const pfRate = (_pfRes$data$Value = (_pfRes$data = pfRes.data) === null || _pfRes$data === void 0 ? void 0 : _pfRes$data.Value) !== null && _pfRes$data$Value !== void 0 ? _pfRes$data$Value : 0.12;\n  const esiRate = (_esiRes$data$Value = (_esiRes$data = esiRes.data) === null || _esiRes$data === void 0 ? void 0 : _esiRes$data.Value) !== null && _esiRes$data$Value !== void 0 ? _esiRes$data$Value : 0.0075;\n  const tdsRate = (_tdsRes$data$Value = (_tdsRes$data = tdsRes.data) === null || _tdsRes$data === void 0 ? void 0 : _tdsRes$data.Value) !== null && _tdsRes$data$Value !== void 0 ? _tdsRes$data$Value : 0.1;\n\n  // Salary calculation\n  let grossSalary = Number(base.BasicSalary || 0) + Number(base.HRA || 0) + Number(base.DA || 0) + Number(base.OtherAllowance || 0);\n  const lopDeduction = +(lop * (grossSalary / 30)).toFixed(2);\n  grossSalary -= lopDeduction;\n  const adjustedGross = grossSalary + bonus - deduction;\n  const PF = +(adjustedGross * pfRate).toFixed(2);\n  const ESI = +(adjustedGross * esiRate).toFixed(2);\n  const TDS = +(adjustedGross * tdsRate).toFixed(2);\n  const netSalary = +(adjustedGross - PF - ESI - TDS).toFixed(2);\n  return {\n    base,\n    leaves,\n    adjustments,\n    grossSalary,\n    lop,\n    lopDeduction,\n    bonus,\n    deduction,\n    adjustedGross,\n    PF,\n    ESI,\n    TDS,\n    netSalary,\n    pfRate,\n    esiRate,\n    tdsRate\n  };\n};","map":{"version":3,"names":["axios","API_BASE_URL","API_BASE_PAYROLL","API_BASE_LEAVES","API_BASE_ADJUSTMENTS","API_BASE_COMPLIANCE","getToken","localStorage","getItem","fetchRuns","res","get","headers","Authorization","data","insertRun","post","deleteRun","id","delete","fetchPreview","userId","monthYear","_pfRes$data$Value","_pfRes$data","_esiRes$data$Value","_esiRes$data","_tdsRes$data$Value","_tdsRes$data","token","baseRes","base","leaveRes","leaves","Array","isArray","filter","l","MonthYear","lop","LeaveType","reduce","sum","Number","LeaveDays","adjRes","adjustments","a","bonus","AdjustmentType","Amount","deduction","pfRes","esiRes","tdsRes","pfRate","Value","esiRate","tdsRate","grossSalary","BasicSalary","HRA","DA","OtherAllowance","lopDeduction","toFixed","adjustedGross","PF","ESI","TDS","netSalary"],"sources":["/Users/jyotirathore101098/Documents/Payroll_Mavens/frontend/src/pages/payrollRun/payrollRunService.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_BASE_URL = \"http://localhost:3000/api/payroll-runs\";\nconst API_BASE_PAYROLL = \"http://localhost:3000/api/payroll-base\";\nconst API_BASE_LEAVES = \"http://localhost:3000/api/leaves\";\nconst API_BASE_ADJUSTMENTS = \"http://localhost:3000/api/adjustments\";\nconst API_BASE_COMPLIANCE = \"http://localhost:3000/api/compliance\";\n\nconst getToken = () => localStorage.getItem(\"token\");\n\nexport const fetchRuns = async () => {\n  const res = await axios.get(API_BASE_URL, {\n    headers: { Authorization: `Bearer ${getToken()}` },\n  });\n  return res.data;\n};\n\nexport const insertRun = async (data) => {\n  return axios.post(API_BASE_URL, data, {\n    headers: { Authorization: `Bearer ${getToken()}` },\n  });\n};\n\nexport const deleteRun = async (id) => {\n  return axios.delete(`${API_BASE_URL}/${id}`, {\n    headers: { Authorization: `Bearer ${getToken()}` },\n  });\n};\n\n// Payroll Preview Calculation\nexport const fetchPreview = async (userId, monthYear) => {\n  const token = getToken();\n\n  // Payroll base\n  const baseRes = await axios.get(`${API_BASE_PAYROLL}/${userId}`, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  const base = baseRes.data;\n\n  // Leaves\n  const leaveRes = await axios.get(`${API_BASE_LEAVES}/${userId}`, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  const leaves = Array.isArray(leaveRes.data)\n    ? leaveRes.data.filter((l) => l.MonthYear === monthYear)\n    : [];\n  const lop = leaves.filter((l) => l.LeaveType === \"LOP\").reduce((sum, l) => sum + Number(l.LeaveDays), 0);\n\n  // Adjustments\n  const adjRes = await axios.get(`${API_BASE_ADJUSTMENTS}/${userId}`, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  const adjustments = Array.isArray(adjRes.data)\n    ? adjRes.data.filter((a) => a.MonthYear === monthYear)\n    : [];\n  const bonus = adjustments.filter((a) => a.AdjustmentType === \"Bonus\").reduce((sum, a) => sum + Number(a.Amount), 0);\n  const deduction = adjustments.filter((a) => a.AdjustmentType === \"Deduction\").reduce((sum, a) => sum + Number(a.Amount), 0);\n\n  // Compliance rules (PF, ESI, TDS rates)\n  const pfRes = await axios.get(`${API_BASE_COMPLIANCE}/rule/PF`, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  const esiRes = await axios.get(`${API_BASE_COMPLIANCE}/rule/ESI`, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  const tdsRes = await axios.get(`${API_BASE_COMPLIANCE}/rule/TDS`, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  const pfRate = pfRes.data?.Value ?? 0.12;\n  const esiRate = esiRes.data?.Value ?? 0.0075;\n  const tdsRate = tdsRes.data?.Value ?? 0.1;\n\n  // Salary calculation\n  let grossSalary = Number(base.BasicSalary || 0) + Number(base.HRA || 0) + Number(base.DA || 0) + Number(base.OtherAllowance || 0);\n  const lopDeduction = +(lop * (grossSalary / 30)).toFixed(2);\n  grossSalary -= lopDeduction;\n\n  const adjustedGross = grossSalary + bonus - deduction;\n  const PF = +(adjustedGross * pfRate).toFixed(2);\n  const ESI = +(adjustedGross * esiRate).toFixed(2);\n  const TDS = +(adjustedGross * tdsRate).toFixed(2);\n  const netSalary = +(adjustedGross - PF - ESI - TDS).toFixed(2);\n\n  return { base, leaves, adjustments, grossSalary, lop, lopDeduction, bonus, deduction, adjustedGross, PF, ESI, TDS, netSalary, pfRate, esiRate, tdsRate };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}