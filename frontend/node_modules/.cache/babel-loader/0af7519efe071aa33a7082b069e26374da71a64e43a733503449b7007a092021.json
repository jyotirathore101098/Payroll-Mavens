{"ast":null,"code":"var _jsxFileName = \"/Users/jyotirathore101098/Documents/Payroll_Mavens/frontend/src/pages/payroll/PayrollPage.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import './PayrollPage.css';\n\n// const API_BASE_URL = 'http://localhost:3000/api/payroll-base';\n\n// const PayrollPage = () => {\n//   const [payrolls, setPayrolls] = useState([]);\n//   const [form, setForm] = useState({\n//     UserID: '',\n//     BasicSalary: '',\n//     HRA: '',\n//     DA: '',\n//     OtherAllowance: '',\n//   });\n//   const [editId, setEditId] = useState(null);\n\n//   useEffect(() => {\n//     fetchPayrolls();\n//   }, []);\n\n//   const fetchPayrolls = async () => {\n//     try {\n//       const token = localStorage.getItem('token');\n//       const res = await axios.get(API_BASE_URL, {\n//         headers: { Authorization: `Bearer ${token}` }\n//       });\n//       setPayrolls(res.data);\n//     } catch (err) {\n//       let msg = 'Failed to fetch payrolls';\n//       if (err.response) msg += ': ' + (err.response.data?.error || JSON.stringify(err.response.data));\n//       else if (err.request) msg += ': No response from server.';\n//       else msg += ': ' + err.message;\n//       alert(msg);\n//       console.error('Fetch payrolls error:', err);\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     setForm({ ...form, [e.target.name]: e.target.value });\n//   };\n\n//   const handleAdd = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const token = localStorage.getItem('token');\n//       await axios.post(`${API_BASE_URL}/create`, form, {\n//         headers: { Authorization: `Bearer ${token}` }\n//       });\n//       setForm({ UserID: '', BasicSalary: '', HRA: '', DA: '', OtherAllowance: '' });\n//       fetchPayrolls();\n//     } catch (err) {\n//       let msg = 'Failed to add payroll';\n//       if (err.response) msg += ': ' + (err.response.data?.error || JSON.stringify(err.response.data));\n//       else if (err.request) msg += ': No response from server.';\n//       else msg += ': ' + err.message;\n//       alert(msg);\n//       console.error('Add payroll error:', err);\n//     }\n//   };\n\n//   const handleEdit = (payroll) => {\n//     setEditId(payroll.UserID);\n//     setForm({\n//       UserID: payroll.UserID,\n//       BasicSalary: payroll.BasicSalary,\n//       HRA: payroll.HRA,\n//       DA: payroll.DA,\n//       OtherAllowance: payroll.OtherAllowance,\n//     });\n//   };\n\n//   const handleUpdate = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const token = localStorage.getItem('token');\n//       await axios.put(`${API_BASE_URL}/${editId}`, form, {\n//         headers: { Authorization: `Bearer ${token}` }\n//       });\n//       setEditId(null);\n//       setForm({ UserID: '', BasicSalary: '', HRA: '', DA: '', OtherAllowance: '' });\n//       fetchPayrolls();\n//     } catch (err) {\n//       alert('Failed to update payroll');\n//     }\n//   };\n\n//   return (\n//     <div className=\"payroll-container\">\n//       <h2 className=\"payroll-title\">Payroll Base Management</h2>\n//       <form className=\"payroll-form\" onSubmit={editId ? handleUpdate : handleAdd}>\n//         <input name=\"UserID\" value={form.UserID} onChange={handleChange} placeholder=\"UserID\" required className=\"payroll-input\" />\n//         <input name=\"BasicSalary\" value={form.BasicSalary} onChange={handleChange} placeholder=\"Basic Salary\" required className=\"payroll-input\" />\n//         <input name=\"HRA\" value={form.HRA} onChange={handleChange} placeholder=\"HRA\" className=\"payroll-input\" />\n//         <input name=\"DA\" value={form.DA} onChange={handleChange} placeholder=\"DA\" className=\"payroll-input\" />\n//         <input name=\"OtherAllowance\" value={form.OtherAllowance} onChange={handleChange} placeholder=\"Other Allowance\" className=\"payroll-input\" />\n//         <button className=\"payroll-btn\" type=\"submit\">{editId ? 'Update' : 'Add'}</button>\n//         {editId && (\n//           <button className=\"payroll-btn\" type=\"button\" onClick={() => { setEditId(null); setForm({ UserID: '', BasicSalary: '', HRA: '', DA: '', OtherAllowance: '' }); }}>Cancel</button>\n//         )}\n//       </form>\n//       <table className=\"payroll-table\">\n//         <thead>\n//           <tr>\n//             <th>UserID</th>\n//             <th>BasicSalary</th>\n//             <th>HRA</th>\n//             <th>DA</th>\n//             <th>OtherAllowance</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {payrolls.map((p) => (\n//             <tr key={p.UserID}>\n//               <td>{p.UserID}</td>\n//               <td>{p.BasicSalary}</td>\n//               <td>{p.HRA}</td>\n//               <td>{p.DA}</td>\n//               <td>{p.OtherAllowance}</td>\n//               <td>\n//                 <button className=\"payroll-btn\" onClick={() => handleEdit(p)}>Edit</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default PayrollPage;\n\nimport React, { useEffect, useState } from \"react\";\nimport { fetchPayrolls, createPayroll, updatePayroll, deletePayroll } from \"./payrollService\";\nimport PayrollForm from \"./PayrollForm\";\nimport PayrollTable from \"./PayrollTable\";\nimport \"./PayrollPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PayrollPage = () => {\n  _s();\n  const [payrolls, setPayrolls] = useState([]);\n  const [form, setForm] = useState({\n    UserID: \"\",\n    BasicSalary: \"\",\n    HRA: \"\",\n    DA: \"\",\n    OtherAllowance: \"\"\n  });\n  const [editId, setEditId] = useState(null);\n  useEffect(() => {\n    loadPayrolls();\n  }, []);\n  const loadPayrolls = async () => {\n    try {\n      const data = await fetchPayrolls();\n      setPayrolls(data);\n    } catch (err) {\n      alert(\"Failed to fetch payrolls\");\n      console.error(err);\n    }\n  };\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (editId) {\n        await updatePayroll(editId, form);\n      } else {\n        await createPayroll(form);\n      }\n      setForm({\n        UserID: \"\",\n        BasicSalary: \"\",\n        HRA: \"\",\n        DA: \"\",\n        OtherAllowance: \"\"\n      });\n      setEditId(null);\n      loadPayrolls();\n    } catch (err) {\n      alert(\"Failed to save payroll\");\n      console.error(err);\n    }\n  };\n  const handleEdit = payroll => {\n    setEditId(payroll.UserID);\n    setForm({\n      UserID: payroll.UserID,\n      BasicSalary: payroll.BasicSalary,\n      HRA: payroll.HRA,\n      DA: payroll.DA,\n      OtherAllowance: payroll.OtherAllowance\n    });\n  };\n  const handleDelete = async id => {\n    if (!window.confirm(\"Delete this payroll record?\")) return;\n    try {\n      await deletePayroll(id);\n      loadPayrolls();\n    } catch (err) {\n      alert(\"Failed to delete payroll\");\n      console.error(err);\n    }\n  };\n  const handleCancel = () => {\n    setEditId(null);\n    setForm({\n      UserID: \"\",\n      BasicSalary: \"\",\n      HRA: \"\",\n      DA: \"\",\n      OtherAllowance: \"\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payroll-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"payroll-title\",\n      children: \"Payroll Base Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PayrollForm, {\n      form: form,\n      editId: editId,\n      onChange: handleChange,\n      onSubmit: handleSubmit,\n      onCancel: handleCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PayrollTable, {\n      payrolls: payrolls,\n      onEdit: handleEdit,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n_s(PayrollPage, \"ezTC18fJOVXUqu2ZnJ+OfQQGLHE=\");\n_c = PayrollPage;\nexport default PayrollPage;\nvar _c;\n$RefreshReg$(_c, \"PayrollPage\");","map":{"version":3,"names":["React","useEffect","useState","fetchPayrolls","createPayroll","updatePayroll","deletePayroll","PayrollForm","PayrollTable","jsxDEV","_jsxDEV","PayrollPage","_s","payrolls","setPayrolls","form","setForm","UserID","BasicSalary","HRA","DA","OtherAllowance","editId","setEditId","loadPayrolls","data","err","alert","console","error","handleChange","e","target","name","value","handleSubmit","preventDefault","handleEdit","payroll","handleDelete","id","window","confirm","handleCancel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onSubmit","onCancel","onEdit","onDelete","_c","$RefreshReg$"],"sources":["/Users/jyotirathore101098/Documents/Payroll_Mavens/frontend/src/pages/payroll/PayrollPage.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import './PayrollPage.css';\n\n// const API_BASE_URL = 'http://localhost:3000/api/payroll-base';\n\n// const PayrollPage = () => {\n//   const [payrolls, setPayrolls] = useState([]);\n//   const [form, setForm] = useState({\n//     UserID: '',\n//     BasicSalary: '',\n//     HRA: '',\n//     DA: '',\n//     OtherAllowance: '',\n//   });\n//   const [editId, setEditId] = useState(null);\n\n//   useEffect(() => {\n//     fetchPayrolls();\n//   }, []);\n\n//   const fetchPayrolls = async () => {\n//     try {\n//       const token = localStorage.getItem('token');\n//       const res = await axios.get(API_BASE_URL, {\n//         headers: { Authorization: `Bearer ${token}` }\n//       });\n//       setPayrolls(res.data);\n//     } catch (err) {\n//       let msg = 'Failed to fetch payrolls';\n//       if (err.response) msg += ': ' + (err.response.data?.error || JSON.stringify(err.response.data));\n//       else if (err.request) msg += ': No response from server.';\n//       else msg += ': ' + err.message;\n//       alert(msg);\n//       console.error('Fetch payrolls error:', err);\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     setForm({ ...form, [e.target.name]: e.target.value });\n//   };\n\n//   const handleAdd = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const token = localStorage.getItem('token');\n//       await axios.post(`${API_BASE_URL}/create`, form, {\n//         headers: { Authorization: `Bearer ${token}` }\n//       });\n//       setForm({ UserID: '', BasicSalary: '', HRA: '', DA: '', OtherAllowance: '' });\n//       fetchPayrolls();\n//     } catch (err) {\n//       let msg = 'Failed to add payroll';\n//       if (err.response) msg += ': ' + (err.response.data?.error || JSON.stringify(err.response.data));\n//       else if (err.request) msg += ': No response from server.';\n//       else msg += ': ' + err.message;\n//       alert(msg);\n//       console.error('Add payroll error:', err);\n//     }\n//   };\n\n//   const handleEdit = (payroll) => {\n//     setEditId(payroll.UserID);\n//     setForm({\n//       UserID: payroll.UserID,\n//       BasicSalary: payroll.BasicSalary,\n//       HRA: payroll.HRA,\n//       DA: payroll.DA,\n//       OtherAllowance: payroll.OtherAllowance,\n//     });\n//   };\n\n//   const handleUpdate = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const token = localStorage.getItem('token');\n//       await axios.put(`${API_BASE_URL}/${editId}`, form, {\n//         headers: { Authorization: `Bearer ${token}` }\n//       });\n//       setEditId(null);\n//       setForm({ UserID: '', BasicSalary: '', HRA: '', DA: '', OtherAllowance: '' });\n//       fetchPayrolls();\n//     } catch (err) {\n//       alert('Failed to update payroll');\n//     }\n//   };\n\n//   return (\n//     <div className=\"payroll-container\">\n//       <h2 className=\"payroll-title\">Payroll Base Management</h2>\n//       <form className=\"payroll-form\" onSubmit={editId ? handleUpdate : handleAdd}>\n//         <input name=\"UserID\" value={form.UserID} onChange={handleChange} placeholder=\"UserID\" required className=\"payroll-input\" />\n//         <input name=\"BasicSalary\" value={form.BasicSalary} onChange={handleChange} placeholder=\"Basic Salary\" required className=\"payroll-input\" />\n//         <input name=\"HRA\" value={form.HRA} onChange={handleChange} placeholder=\"HRA\" className=\"payroll-input\" />\n//         <input name=\"DA\" value={form.DA} onChange={handleChange} placeholder=\"DA\" className=\"payroll-input\" />\n//         <input name=\"OtherAllowance\" value={form.OtherAllowance} onChange={handleChange} placeholder=\"Other Allowance\" className=\"payroll-input\" />\n//         <button className=\"payroll-btn\" type=\"submit\">{editId ? 'Update' : 'Add'}</button>\n//         {editId && (\n//           <button className=\"payroll-btn\" type=\"button\" onClick={() => { setEditId(null); setForm({ UserID: '', BasicSalary: '', HRA: '', DA: '', OtherAllowance: '' }); }}>Cancel</button>\n//         )}\n//       </form>\n//       <table className=\"payroll-table\">\n//         <thead>\n//           <tr>\n//             <th>UserID</th>\n//             <th>BasicSalary</th>\n//             <th>HRA</th>\n//             <th>DA</th>\n//             <th>OtherAllowance</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {payrolls.map((p) => (\n//             <tr key={p.UserID}>\n//               <td>{p.UserID}</td>\n//               <td>{p.BasicSalary}</td>\n//               <td>{p.HRA}</td>\n//               <td>{p.DA}</td>\n//               <td>{p.OtherAllowance}</td>\n//               <td>\n//                 <button className=\"payroll-btn\" onClick={() => handleEdit(p)}>Edit</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default PayrollPage;\n\nimport React, { useEffect, useState } from \"react\";\nimport { fetchPayrolls, createPayroll, updatePayroll, deletePayroll } from \"./payrollService\";\nimport PayrollForm from \"./PayrollForm\";\nimport PayrollTable from \"./PayrollTable\";\nimport \"./PayrollPage.css\";\n\nconst PayrollPage = () => {\n  const [payrolls, setPayrolls] = useState([]);\n  const [form, setForm] = useState({\n    UserID: \"\",\n    BasicSalary: \"\",\n    HRA: \"\",\n    DA: \"\",\n    OtherAllowance: \"\",\n  });\n  const [editId, setEditId] = useState(null);\n\n  useEffect(() => {\n    loadPayrolls();\n  }, []);\n\n  const loadPayrolls = async () => {\n    try {\n      const data = await fetchPayrolls();\n      setPayrolls(data);\n    } catch (err) {\n      alert(\"Failed to fetch payrolls\");\n      console.error(err);\n    }\n  };\n\n  const handleChange = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (editId) {\n        await updatePayroll(editId, form);\n      } else {\n        await createPayroll(form);\n      }\n      setForm({ UserID: \"\", BasicSalary: \"\", HRA: \"\", DA: \"\", OtherAllowance: \"\" });\n      setEditId(null);\n      loadPayrolls();\n    } catch (err) {\n      alert(\"Failed to save payroll\");\n      console.error(err);\n    }\n  };\n\n  const handleEdit = (payroll) => {\n    setEditId(payroll.UserID);\n    setForm({\n      UserID: payroll.UserID,\n      BasicSalary: payroll.BasicSalary,\n      HRA: payroll.HRA,\n      DA: payroll.DA,\n      OtherAllowance: payroll.OtherAllowance,\n    });\n  };\n\n  const handleDelete = async (id) => {\n    if (!window.confirm(\"Delete this payroll record?\")) return;\n    try {\n      await deletePayroll(id);\n      loadPayrolls();\n    } catch (err) {\n      alert(\"Failed to delete payroll\");\n      console.error(err);\n    }\n  };\n\n  const handleCancel = () => {\n    setEditId(null);\n    setForm({ UserID: \"\", BasicSalary: \"\", HRA: \"\", DA: \"\", OtherAllowance: \"\" });\n  };\n\n  return (\n    <div className=\"payroll-container\">\n      <h2 className=\"payroll-title\">Payroll Base Management</h2>\n      <PayrollForm\n        form={form}\n        editId={editId}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n        onCancel={handleCancel}\n      />\n      <PayrollTable payrolls={payrolls} onEdit={handleEdit} onDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default PayrollPage;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,EAAEC,aAAa,EAAEC,aAAa,EAAEC,aAAa,QAAQ,kBAAkB;AAC7F,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC;IAC/Be,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,EAAE;IACfC,GAAG,EAAE,EAAE;IACPC,EAAE,EAAE,EAAE;IACNC,cAAc,EAAE;EAClB,CAAC,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAE1CD,SAAS,CAAC,MAAM;I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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}