{"ast":null,"code":"var _jsxFileName = \"/Users/jyotirathore101098/Documents/Payroll_Mavens/frontend/src/pages/reports/ReportRow.js\";\nimport React from \"react\";\nimport { fetchLeaves, fetchSalaryAdjustments, downloadReport } from \"./reportsService\";\nimport Papa from \"papaparse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReportRow = ({\n  report\n}) => {\n  const handleLeavesDownload = async () => {\n    try {\n      const leaves = await fetchLeaves();\n      const headers = [\"LeaveID\", \"UserID\", \"LeaveType\", \"LeaveDays\", \"MonthYear\", \"CreatedAt\"];\n      const csvContent = Papa.unparse(leaves, {\n        header: true,\n        columns: headers\n      });\n      triggerDownload(csvContent, \"leaves_report.csv\");\n    } catch (err) {\n      alert(\"Download failed: \" + err.message);\n    }\n  };\n  const handleSalaryAdjustmentsDownload = async () => {\n    try {\n      const adjustments = await fetchSalaryAdjustments();\n      if (!Array.isArray(adjustments) || adjustments.length === 0) {\n        alert(\"No salary adjustment data available.\");\n        return;\n      }\n      const formatted = adjustments.map(a => ({\n        AdjustmentID: a.AdjustmentID || \"\",\n        UserID: a.UserID || \"\",\n        Amount: a.Amount || \"\",\n        Reason: a.Reason || \"\",\n        MonthYear: a.MonthYear || \"\",\n        CreatedAt: a.CreatedAt || \"\"\n      }));\n      const headers = [\"AdjustmentID\", \"UserID\", \"Amount\", \"Reason\", \"MonthYear\", \"CreatedAt\"];\n      const csvContent = Papa.unparse(formatted, {\n        header: true,\n        columns: headers\n      });\n      triggerDownload(csvContent, \"salary_adjustments_report.csv\");\n    } catch (err) {\n      alert(\"Download failed: \" + err.message);\n    }\n  };\n  const triggerDownload = (csvContent, fileName) => {\n    const blob = new Blob([csvContent], {\n      type: \"text/csv\"\n    });\n    const blobUrl = window.URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = blobUrl;\n    link.setAttribute(\"download\", fileName);\n    document.body.appendChild(link);\n    link.click();\n    link.remove();\n  };\n  const handleGenericDownload = async () => {\n    try {\n      const fileName = report.id === \"compliance_csv\" ? `compliance_report_Sep-2025.csv` : `${report.id}_report.csv`;\n      await downloadReport(report.endpoint, fileName);\n    } catch (err) {\n      alert(\"Download failed: \" + err.message);\n    }\n  };\n  const formatReportType = name => {\n    return (name === null || name === void 0 ? void 0 : name.replace(/_/g, ' ').toUpperCase()) || 'REPORT';\n  };\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"report-id\",\n        children: report.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"report-type\",\n        children: formatReportType(report.name)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: report.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: report.id === \"leaves_csv\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reports-download-btn\",\n        onClick: handleLeavesDownload,\n        title: \"Download leaves data as CSV\",\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this) : report.id === \"salary_adjustment_csv\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reports-download-btn\",\n        onClick: handleSalaryAdjustmentsDownload,\n        title: \"Download salary adjustments as CSV\",\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this) : report.endpoint ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reports-download-btn\",\n        onClick: handleGenericDownload,\n        title: `Download ${report.name} report`,\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#9ca3af',\n          fontStyle: 'italic'\n        },\n        children: \"N/A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, report.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_c = ReportRow;\nexport default ReportRow;\nvar _c;\n$RefreshReg$(_c, \"ReportRow\");","map":{"version":3,"names":["React","fetchLeaves","fetchSalaryAdjustments","downloadReport","Papa","jsxDEV","_jsxDEV","ReportRow","report","handleLeavesDownload","leaves","headers","csvContent","unparse","header","columns","triggerDownload","err","alert","message","handleSalaryAdjustmentsDownload","adjustments","Array","isArray","length","formatted","map","a","AdjustmentID","UserID","Amount","Reason","MonthYear","CreatedAt","fileName","blob","Blob","type","blobUrl","window","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","remove","handleGenericDownload","id","endpoint","formatReportType","name","replace","toUpperCase","children","className","_jsxFileName","lineNumber","columnNumber","description","onClick","title","style","color","fontStyle","_c","$RefreshReg$"],"sources":["/Users/jyotirathore101098/Documents/Payroll_Mavens/frontend/src/pages/reports/ReportRow.js"],"sourcesContent":["import React from \"react\";\nimport { fetchLeaves, fetchSalaryAdjustments, downloadReport } from \"./reportsService\";\nimport Papa from \"papaparse\";\n\nconst ReportRow = ({ report }) => {\n  const handleLeavesDownload = async () => {\n    try {\n      const leaves = await fetchLeaves();\n      const headers = [\"LeaveID\",\"UserID\",\"LeaveType\",\"LeaveDays\",\"MonthYear\",\"CreatedAt\"];\n      const csvContent = Papa.unparse(leaves, { header: true, columns: headers });\n      triggerDownload(csvContent, \"leaves_report.csv\");\n    } catch (err) {\n      alert(\"Download failed: \" + err.message);\n    }\n  };\n\n  const handleSalaryAdjustmentsDownload = async () => {\n    try {\n      const adjustments = await fetchSalaryAdjustments();\n      if (!Array.isArray(adjustments) || adjustments.length === 0) {\n        alert(\"No salary adjustment data available.\");\n        return;\n      }\n      const formatted = adjustments.map(a => ({\n        AdjustmentID: a.AdjustmentID || \"\",\n        UserID: a.UserID || \"\",\n        Amount: a.Amount || \"\",\n        Reason: a.Reason || \"\",\n        MonthYear: a.MonthYear || \"\",\n        CreatedAt: a.CreatedAt || \"\"\n      }));\n      const headers = [\"AdjustmentID\",\"UserID\",\"Amount\",\"Reason\",\"MonthYear\",\"CreatedAt\"];\n      const csvContent = Papa.unparse(formatted, { header: true, columns: headers });\n      triggerDownload(csvContent, \"salary_adjustments_report.csv\");\n    } catch (err) {\n      alert(\"Download failed: \" + err.message);\n    }\n  };\n\n  const triggerDownload = (csvContent, fileName) => {\n    const blob = new Blob([csvContent], { type: \"text/csv\" });\n    const blobUrl = window.URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = blobUrl;\n    link.setAttribute(\"download\", fileName);\n    document.body.appendChild(link);\n    link.click();\n    link.remove();\n  };\n\n  const handleGenericDownload = async () => {\n    try {\n      const fileName = report.id === \"compliance_csv\"\n        ? `compliance_report_Sep-2025.csv`\n        : `${report.id}_report.csv`;\n      await downloadReport(report.endpoint, fileName);\n    } catch (err) {\n      alert(\"Download failed: \" + err.message);\n    }\n  };\n\n  const formatReportType = (name) => {\n    return name?.replace(/_/g, ' ').toUpperCase() || 'REPORT';\n  };\n\n  return (\n    <tr key={report.id}>\n      <td>\n        <span className=\"report-id\">{report.id}</span>\n      </td>\n      <td>\n        <span className=\"report-type\">{formatReportType(report.name)}</span>\n      </td>\n      <td>{report.description}</td>\n      <td>\n        {report.id === \"leaves_csv\" ? (\n          <button \n            className=\"reports-download-btn\" \n            onClick={handleLeavesDownload}\n            title=\"Download leaves data as CSV\"\n          >\n            Download\n          </button>\n        ) : report.id === \"salary_adjustment_csv\" ? (\n          <button \n            className=\"reports-download-btn\" \n            onClick={handleSalaryAdjustmentsDownload}\n            title=\"Download salary adjustments as CSV\"\n          >\n            Download\n          </button>\n        ) : report.endpoint ? (\n          <button \n            className=\"reports-download-btn\" \n            onClick={handleGenericDownload}\n            title={`Download ${report.name} report`}\n          >\n            Download\n          </button>\n        ) : (\n          <span style={{ color: '#9ca3af', fontStyle: 'italic' }}>N/A</span>\n        )}\n      </td>\n    </tr>\n  );\n};\n\nexport default ReportRow;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,sBAAsB,EAAEC,cAAc,QAAQ,kBAAkB;AACtF,OAAOC,IAAI,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAChC,MAAMC,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMT,WAAW,CAAC,CAAC;MAClC,MAAMU,OAAO,GAAG,CAAC,SAAS,EAAC,QAAQ,EAAC,WAAW,EAAC,WAAW,EAAC,WAAW,EAAC,WAAW,CAAC;MACpF,MAAMC,UAAU,GAAGR,IAAI,CAACS,OAAO,CAACH,MAAM,EAAE;QAAEI,MAAM,EAAE,IAAI;QAAEC,OAAO,EAAEJ;MAAQ,CAAC,CAAC;MAC3EK,eAAe,CAACJ,UAAU,EAAE,mBAAmB,CAAC;IAClD,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZC,KAAK,CAAC,mBAAmB,GAAGD,GAAG,CAACE,OAAO,CAAC;IAC1C;EACF,CAAC;EAED,MAAMC,+BAA+B,GAAG,MAAAA,CAAA,KAAY;IAClD,IAAI;MACF,MAAMC,WAAW,GAAG,MAAMnB,sBAAsB,CAAC,CAAC;MAClD,IAAI,CAACoB,KAAK,CAACC,OAAO,CAACF,WAAW,CAAC,IAAIA,WAAW,CAACG,MAAM,KAAK,CAAC,EAAE;QAC3DN,KAAK,CAAC,sCAAsC,CAAC;QAC7C;MACF;MACA,MAAMO,SAAS,GAAGJ,WAAW,CAACK,GAAG,CAACC,CAAC,KAAK;QACtCC,YAAY,EAAED,CAAC,CAACC,YAAY,IAAI,EAAE;QAClCC,MAAM,EAAEF,CAAC,CAACE,MAAM,IAAI,EAAE;QACtBC,MAAM,EAAEH,CAAC,CAACG,MAAM,IAAI,EAAE;QACtBC,MAAM,EAAEJ,CAAC,CAACI,MAAM,IAAI,EAAE;QACtBC,SAAS,EAAEL,CAAC,CAACK,SAAS,IAAI,EAAE;QAC5BC,SAAS,EAAEN,CAAC,CAACM,SAAS,IAAI;MAC5B,CAAC,CAAC,CAAC;MACH,MAAMtB,OAAO,GAAG,CAAC,cAAc,EAAC,QAAQ,EAAC,QAAQ,EAAC,QAAQ,EAAC,WAAW,EAAC,WAAW,CAAC;MACnF,MAAMC,UAAU,GAAGR,IAAI,CAACS,OAAO,CAACY,SAAS,EAAE;QAAEX,MAAM,EAAE,IAAI;QAAEC,OAAO,EAAEJ;MAAQ,CAAC,CAAC;MAC9EK,eAAe,CAACJ,UAAU,EAAE,+BAA+B,CAAC;IAC9D,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZC,KAAK,CAAC,mBAAmB,GAAGD,GAAG,CAACE,OAAO,CAAC;IAC1C;EACF,CAAC;EAED,MAAMH,eAAe,GAAGA,CAACJ,UAAU,EAAEsB,QAAQ,KAAK;IAChD,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACxB,UAAU,CAAC,EAAE;MAAEyB,IAAI,EAAE;IAAW,CAAC,CAAC;IACzD,MAAMC,OAAO,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC;IAChD,MAAMO,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAGP,OAAO;IACnBI,IAAI,CAACI,YAAY,CAAC,UAAU,EAAEZ,QAAQ,CAAC;IACvCS,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;IAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;IACZP,IAAI,CAACQ,MAAM,CAAC,CAAC;EACf,CAAC;EAED,MAAMC,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI;MACF,MAAMjB,QAAQ,GAAG1B,MAAM,CAAC4C,EAAE,KAAK,gBAAgB,GAC3C,gCAAgC,GAChC,GAAG5C,MAAM,CAAC4C,EAAE,aAAa;MAC7B,MAAMjD,cAAc,CAACK,MAAM,CAAC6C,QAAQ,EAAEnB,QAAQ,CAAC;IACjD,CAAC,CAAC,OAAOjB,GAAG,EAAE;MACZC,KAAK,CAAC,mBAAmB,GAAGD,GAAG,CAACE,OAAO,CAAC;IAC1C;EACF,CAAC;EAED,MAAMmC,gBAAgB,GAAIC,IAAI,IAAK;IACjC,OAAO,CAAAA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACC,WAAW,CAAC,CAAC,KAAI,QAAQ;EAC3D,CAAC;EAED,oBACEnD,OAAA;IAAAoD,QAAA,gBACEpD,OAAA;MAAAoD,QAAA,eACEpD,OAAA;QAAMqD,SAAS,EAAC,WAAW;QAAAD,QAAA,EAAElD,MAAM,CAAC4C;MAAE;QAAAlB,QAAA,EAAA0B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAA5B,QAAA,EAAA0B,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACLxD,OAAA;MAAAoD,QAAA,eACEpD,OAAA;QAAMqD,SAAS,EAAC,aAAa;QAAAD,QAAA,EAAEJ,gBAAgB,CAAC9C,MAAM,CAAC+C,IAAI;MAAC;QAAArB,QAAA,EAAA0B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAA5B,QAAA,EAAA0B,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC,eACLxD,OAAA;MAAAoD,QAAA,EAAKlD,MAAM,CAACuD;IAAW;MAAA7B,QAAA,EAAA0B,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC7BxD,OAAA;MAAAoD,QAAA,EACGlD,MAAM,CAAC4C,EAAE,KAAK,YAAY,gBACzB9C,OAAA;QACEqD,SAAS,EAAC,sBAAsB;QAChCK,OAAO,EAAEvD,oBAAqB;QAC9BwD,KAAK,EAAC,6BAA6B;QAAAP,QAAA,EACpC;MAED;QAAAxB,QAAA,EAAA0B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,GACPtD,MAAM,CAAC4C,EAAE,KAAK,uBAAuB,gBACvC9C,OAAA;QACEqD,SAAS,EAAC,sBAAsB;QAChCK,OAAO,EAAE5C,+BAAgC;QACzC6C,KAAK,EAAC,oCAAoC;QAAAP,QAAA,EAC3C;MAED;QAAAxB,QAAA,EAAA0B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,GACPtD,MAAM,CAAC6C,QAAQ,gBACjB/C,OAAA;QACEqD,SAAS,EAAC,sBAAsB;QAChCK,OAAO,EAAEb,qBAAsB;QAC/Bc,KAAK,EAAE,YAAYzD,MAAM,CAAC+C,IAAI,SAAU;QAAAG,QAAA,EACzC;MAED;QAAAxB,QAAA,EAAA0B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAETxD,OAAA;QAAM4D,KAAK,EAAE;UAAEC,KAAK,EAAE,SAAS;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAV,QAAA,EAAC;MAAG;QAAAxB,QAAA,EAAA0B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAClE;MAAA5B,QAAA,EAAA0B,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,GApCEtD,MAAM,CAAC4C,EAAE;IAAAlB,QAAA,EAAA0B,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAqCd,CAAC;AAET,CAAC;AAACO,EAAA,GArGI9D,SAAS;AAuGf,eAAeA,SAAS;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}