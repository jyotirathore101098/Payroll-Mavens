{"ast":null,"code":"var _jsxFileName = \"/Users/jyotirathore101098/Documents/Payroll_Mavens/frontend/src/pages/salaryAdjustment/SalaryAdjustmentPage.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import \"./SalaryAdjustmentPage.css\";\n\n// const API_BASE_URL = \"http://localhost:3000/api/adjustments\";\n\n// const SalaryAdjustmentPage = () => {\n//   const [adjustments, setAdjustments] = useState([]);\n//   const [form, setForm] = useState({\n//     UserID: \"\",\n//     AdjustmentType: \"\",\n//     Amount: \"\",\n//     MonthYear: \"\",\n//     Remarks: \"\",\n//   });\n//   const [editId, setEditId] = useState(null);\n\n//   useEffect(() => {\n//     fetchAdjustments();\n//   }, []);\n\n//   const fetchAdjustments = async () => {\n//     try {\n//       const token = localStorage.getItem(\"token\");\n//       const res = await axios.get(API_BASE_URL, {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n//       if (Array.isArray(res.data)) {\n//         setAdjustments(res.data);\n//       } else {\n//         setAdjustments([]);\n//         console.error(\"Unexpected response:\", res.data);\n//         alert(\"Unexpected response from server. Check console for details.\");\n//       }\n//     } catch (err) {\n//       console.error(\"Fetch salary adjustments error:\", err);\n//       alert(\n//         err?.response?.data?.error ||\n//         err?.response?.data?.message ||\n//         err?.message ||\n//         \"Failed to fetch salary adjustments\"\n//       );\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     setForm({\n//       ...form,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   const handleAdd = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const token = localStorage.getItem(\"token\");\n//       await axios.post(API_BASE_URL, form, {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n//       setForm({ UserID: \"\", AdjustmentType: \"\", Amount: \"\", MonthYear: \"\", Remarks: \"\" });\n//       fetchAdjustments();\n//     } catch (err) {\n//       alert(err?.response?.data?.message || \"Failed to add adjustment\");\n//     }\n//   };\n\n//   const handleEdit = (adj) => {\n//     setEditId(adj.AdjustmentID || adj._id);\n//     setForm({\n//       UserID: adj.UserID,\n//       AdjustmentType: adj.AdjustmentType,\n//       Amount: adj.Amount,\n//       MonthYear: adj.MonthYear,\n//       Remarks: adj.Remarks,\n//     });\n//   };\n\n//   const handleUpdate = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const token = localStorage.getItem(\"token\");\n//       await axios.put(`${API_BASE_URL}/${editId}`, form, {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n//       setEditId(null);\n//       setForm({ UserID: \"\", AdjustmentType: \"\", Amount: \"\", MonthYear: \"\", Remarks: \"\" });\n//       fetchAdjustments();\n//     } catch (err) {\n//       alert(err?.response?.data?.message || \"Failed to update adjustment\");\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (!window.confirm(\"Delete this adjustment?\")) return;\n//     try {\n//       const token = localStorage.getItem(\"token\");\n//       await axios.delete(`${API_BASE_URL}/${id}`, {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n//       fetchAdjustments();\n//     } catch (err) {\n//       alert(\"Failed to delete adjustment\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"salary-adjustment-container\">\n//       <h2 className=\"salary-adjustment-title\">Salary Adjustments</h2>\n//       <form\n//         className=\"salary-adjustment-form\"\n//         onSubmit={editId ? handleUpdate : handleAdd}\n//       >\n//         <input\n//           name=\"UserID\"\n//           value={form.UserID}\n//           onChange={handleChange}\n//           placeholder=\"User ID\"\n//           required\n//           className=\"salary-adjustment-input\"\n//         />\n//         <select\n//           name=\"AdjustmentType\"\n//           value={form.AdjustmentType}\n//           onChange={handleChange}\n//           required\n//           className=\"salary-adjustment-input\"\n//         >\n//           <option value=\"\">Type</option>\n//           <option value=\"Bonus\">Bonus</option>\n//           <option value=\"Deduction\">Deduction</option>\n//         </select>\n//         <input\n//           name=\"Amount\"\n//           type=\"number\"\n//           value={form.Amount}\n//           onChange={handleChange}\n//           placeholder=\"Amount\"\n//           required\n//           className=\"salary-adjustment-input\"\n//         />\n//         <input\n//           name=\"MonthYear\"\n//           type=\"text\"\n//           value={form.MonthYear}\n//           onChange={handleChange}\n//           placeholder=\"MonthYear (e.g. Oct-2025)\"\n//           pattern=\"^[A-Za-z]{3}-\\d{4}$\"\n//           required\n//           className=\"salary-adjustment-input\"\n//         />\n//         <input\n//           name=\"Remarks\"\n//           value={form.Remarks}\n//           onChange={handleChange}\n//           placeholder=\"Remarks\"\n//           className=\"salary-adjustment-input\"\n//         />\n//         <button className=\"salary-adjustment-btn\" type=\"submit\">\n//           {editId ? \"Update\" : \"Add\"}\n//         </button>\n//         {editId && (\n//           <button\n//             className=\"salary-adjustment-btn\"\n//             type=\"button\"\n//             onClick={() => {\n//               setEditId(null);\n//               setForm({\n//                 UserID: \"\",\n//                 AdjustmentType: \"\",\n//                 Amount: \"\",\n//                 MonthYear: \"\",\n//                 Remarks: \"\",\n//               });\n//             }}\n//           >\n//             Cancel\n//           </button>\n//         )}\n//       </form>\n//       <div className=\"salary-adjustment-table-wrapper\">\n//         <table className=\"salary-adjustment-table\">\n//           <thead>\n//             <tr>\n//               <th>User ID</th>\n//               <th>Type</th>\n//               <th>Amount</th>\n//               <th>Month/Year</th>\n//               <th>Remarks</th>\n//               <th>Actions</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {adjustments.map((adj) => (\n//               <tr key={adj.AdjustmentID || adj._id}>\n//                 <td>{adj.UserID}</td>\n//                 <td>{adj.AdjustmentType}</td>\n//                 <td>{adj.Amount}</td>\n//                 <td>{adj.MonthYear}</td>\n//                 <td>{adj.Remarks}</td>\n//                 <td>\n//                   <div style={{ display: \"flex\", gap: \"8px\" }}>\n//                     <button\n//                       className=\"salary-adjustment-btn\"\n//                       onClick={() => handleEdit(adj)}\n//                     >\n//                       Edit\n//                     </button>\n//                     <button\n//                       className=\"salary-adjustment-btn\"\n//                       onClick={() => handleDelete(adj.AdjustmentID || adj._id)}\n//                     >\n//                       Delete\n//                     </button>\n//                   </div>\n//                 </td>\n//               </tr>\n//             ))}\n//             {adjustments.length === 0 && (\n//               <tr>\n//                 <td colSpan=\"6\" style={{ textAlign: \"center\", color: \"#888\" }}>\n//                   No adjustments found.\n//                 </td>\n//               </tr>\n//             )}\n//           </tbody>\n//         </table>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SalaryAdjustmentPage;\n\nimport React, { useEffect, useState } from \"react\";\nimport SalaryAdjustmentForm from \"./SalaryAdjustmentForm\";\nimport SalaryAdjustmentTable from \"./SalaryAdjustmentTable\";\nimport { fetchAdjustments, addAdjustment, updateAdjustment, deleteAdjustment } from \"./salaryAdjustmentService\";\nimport \"./SalaryAdjustmentPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SalaryAdjustmentPage = () => {\n  _s();\n  const [adjustments, setAdjustments] = useState([]);\n  const [form, setForm] = useState({\n    UserID: \"\",\n    AdjustmentType: \"\",\n    Amount: \"\",\n    MonthYear: \"\",\n    Remarks: \"\"\n  });\n  const [editId, setEditId] = useState(null);\n  const loadAdjustments = async () => {\n    try {\n      const data = await fetchAdjustments();\n      setAdjustments(data);\n    } catch (err) {\n      alert((err === null || err === void 0 ? void 0 : err.message) || \"Failed to fetch adjustments\");\n    }\n  };\n  useEffect(() => {\n    loadAdjustments();\n  }, []);\n  const handleAdd = async e => {\n    e.preventDefault();\n    await addAdjustment(form);\n    setForm({\n      UserID: \"\",\n      AdjustmentType: \"\",\n      Amount: \"\",\n      MonthYear: \"\",\n      Remarks: \"\"\n    });\n    loadAdjustments();\n  };\n  const handleUpdate = async e => {\n    e.preventDefault();\n    await updateAdjustment(editId, form);\n    setEditId(null);\n    setForm({\n      UserID: \"\",\n      AdjustmentType: \"\",\n      Amount: \"\",\n      MonthYear: \"\",\n      Remarks: \"\"\n    });\n    loadAdjustments();\n  };\n  const handleDelete = async id => {\n    if (!window.confirm(\"Delete this adjustment?\")) return;\n    await deleteAdjustment(id);\n    loadAdjustments();\n  };\n  const handleEdit = adj => {\n    setEditId(adj.AdjustmentID || adj._id);\n    setForm({\n      UserID: adj.UserID,\n      AdjustmentType: adj.AdjustmentType,\n      Amount: adj.Amount,\n      MonthYear: adj.MonthYear,\n      Remarks: adj.Remarks\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"salary-adjustment-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"salary-adjustment-title\",\n      children: \"Salary Adjustments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SalaryAdjustmentForm, {\n      form: form,\n      setForm: setForm,\n      editId: editId,\n      setEditId: setEditId,\n      onAdd: handleAdd,\n      onUpdate: handleUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SalaryAdjustmentTable, {\n      adjustments: adjustments,\n      onEdit: handleEdit,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n};\n_s(SalaryAdjustmentPage, \"TGOkNTRju8Xc+VhBMdON3LSiNik=\");\n_c = SalaryAdjustmentPage;\nexport default SalaryAdjustmentPage;\nvar _c;\n$RefreshReg$(_c, \"SalaryAdjustmentPage\");","map":{"version":3,"names":["React","useEffect","useState","SalaryAdjustmentForm","SalaryAdjustmentTable","fetchAdjustments","addAdjustment","updateAdjustment","deleteAdjustment","jsxDEV","_jsxDEV","SalaryAdjustmentPage","_s","adjustments","setAdjustments","form","setForm","UserID","AdjustmentType","Amount","MonthYear","Remarks","editId","setEditId","loadAdjustments","data","err","alert","message","handleAdd","e","preventDefault","handleUpdate","handleDelete","id","window","confirm","handleEdit","adj","AdjustmentID","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","onUpdate","onEdit","onDelete","_c","$RefreshReg$"],"sources":["/Users/jyotirathore101098/Documents/Payroll_Mavens/frontend/src/pages/salaryAdjustment/SalaryAdjustmentPage.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import \"./SalaryAdjustmentPage.css\";\n\n// const API_BASE_URL = \"http://localhost:3000/api/adjustments\";\n\n// const SalaryAdjustmentPage = () => {\n//   const [adjustments, setAdjustments] = useState([]);\n//   const [form, setForm] = useState({\n//     UserID: \"\",\n//     AdjustmentType: \"\",\n//     Amount: \"\",\n//     MonthYear: \"\",\n//     Remarks: \"\",\n//   });\n//   const [editId, setEditId] = useState(null);\n\n//   useEffect(() => {\n//     fetchAdjustments();\n//   }, []);\n\n//   const fetchAdjustments = async () => {\n//     try {\n//       const token = localStorage.getItem(\"token\");\n//       const res = await axios.get(API_BASE_URL, {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n//       if (Array.isArray(res.data)) {\n//         setAdjustments(res.data);\n//       } else {\n//         setAdjustments([]);\n//         console.error(\"Unexpected response:\", res.data);\n//         alert(\"Unexpected response from server. Check console for details.\");\n//       }\n//     } catch (err) {\n//       console.error(\"Fetch salary adjustments error:\", err);\n//       alert(\n//         err?.response?.data?.error ||\n//         err?.response?.data?.message ||\n//         err?.message ||\n//         \"Failed to fetch salary adjustments\"\n//       );\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     setForm({\n//       ...form,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   const handleAdd = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const token = localStorage.getItem(\"token\");\n//       await axios.post(API_BASE_URL, form, {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n//       setForm({ UserID: \"\", AdjustmentType: \"\", Amount: \"\", MonthYear: \"\", Remarks: \"\" });\n//       fetchAdjustments();\n//     } catch (err) {\n//       alert(err?.response?.data?.message || \"Failed to add adjustment\");\n//     }\n//   };\n\n//   const handleEdit = (adj) => {\n//     setEditId(adj.AdjustmentID || adj._id);\n//     setForm({\n//       UserID: adj.UserID,\n//       AdjustmentType: adj.AdjustmentType,\n//       Amount: adj.Amount,\n//       MonthYear: adj.MonthYear,\n//       Remarks: adj.Remarks,\n//     });\n//   };\n\n//   const handleUpdate = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const token = localStorage.getItem(\"token\");\n//       await axios.put(`${API_BASE_URL}/${editId}`, form, {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n//       setEditId(null);\n//       setForm({ UserID: \"\", AdjustmentType: \"\", Amount: \"\", MonthYear: \"\", Remarks: \"\" });\n//       fetchAdjustments();\n//     } catch (err) {\n//       alert(err?.response?.data?.message || \"Failed to update adjustment\");\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (!window.confirm(\"Delete this adjustment?\")) return;\n//     try {\n//       const token = localStorage.getItem(\"token\");\n//       await axios.delete(`${API_BASE_URL}/${id}`, {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n//       fetchAdjustments();\n//     } catch (err) {\n//       alert(\"Failed to delete adjustment\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"salary-adjustment-container\">\n//       <h2 className=\"salary-adjustment-title\">Salary Adjustments</h2>\n//       <form\n//         className=\"salary-adjustment-form\"\n//         onSubmit={editId ? handleUpdate : handleAdd}\n//       >\n//         <input\n//           name=\"UserID\"\n//           value={form.UserID}\n//           onChange={handleChange}\n//           placeholder=\"User ID\"\n//           required\n//           className=\"salary-adjustment-input\"\n//         />\n//         <select\n//           name=\"AdjustmentType\"\n//           value={form.AdjustmentType}\n//           onChange={handleChange}\n//           required\n//           className=\"salary-adjustment-input\"\n//         >\n//           <option value=\"\">Type</option>\n//           <option value=\"Bonus\">Bonus</option>\n//           <option value=\"Deduction\">Deduction</option>\n//         </select>\n//         <input\n//           name=\"Amount\"\n//           type=\"number\"\n//           value={form.Amount}\n//           onChange={handleChange}\n//           placeholder=\"Amount\"\n//           required\n//           className=\"salary-adjustment-input\"\n//         />\n//         <input\n//           name=\"MonthYear\"\n//           type=\"text\"\n//           value={form.MonthYear}\n//           onChange={handleChange}\n//           placeholder=\"MonthYear (e.g. Oct-2025)\"\n//           pattern=\"^[A-Za-z]{3}-\\d{4}$\"\n//           required\n//           className=\"salary-adjustment-input\"\n//         />\n//         <input\n//           name=\"Remarks\"\n//           value={form.Remarks}\n//           onChange={handleChange}\n//           placeholder=\"Remarks\"\n//           className=\"salary-adjustment-input\"\n//         />\n//         <button className=\"salary-adjustment-btn\" type=\"submit\">\n//           {editId ? \"Update\" : \"Add\"}\n//         </button>\n//         {editId && (\n//           <button\n//             className=\"salary-adjustment-btn\"\n//             type=\"button\"\n//             onClick={() => {\n//               setEditId(null);\n//               setForm({\n//                 UserID: \"\",\n//                 AdjustmentType: \"\",\n//                 Amount: \"\",\n//                 MonthYear: \"\",\n//                 Remarks: \"\",\n//               });\n//             }}\n//           >\n//             Cancel\n//           </button>\n//         )}\n//       </form>\n//       <div className=\"salary-adjustment-table-wrapper\">\n//         <table className=\"salary-adjustment-table\">\n//           <thead>\n//             <tr>\n//               <th>User ID</th>\n//               <th>Type</th>\n//               <th>Amount</th>\n//               <th>Month/Year</th>\n//               <th>Remarks</th>\n//               <th>Actions</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {adjustments.map((adj) => (\n//               <tr key={adj.AdjustmentID || adj._id}>\n//                 <td>{adj.UserID}</td>\n//                 <td>{adj.AdjustmentType}</td>\n//                 <td>{adj.Amount}</td>\n//                 <td>{adj.MonthYear}</td>\n//                 <td>{adj.Remarks}</td>\n//                 <td>\n//                   <div style={{ display: \"flex\", gap: \"8px\" }}>\n//                     <button\n//                       className=\"salary-adjustment-btn\"\n//                       onClick={() => handleEdit(adj)}\n//                     >\n//                       Edit\n//                     </button>\n//                     <button\n//                       className=\"salary-adjustment-btn\"\n//                       onClick={() => handleDelete(adj.AdjustmentID || adj._id)}\n//                     >\n//                       Delete\n//                     </button>\n//                   </div>\n//                 </td>\n//               </tr>\n//             ))}\n//             {adjustments.length === 0 && (\n//               <tr>\n//                 <td colSpan=\"6\" style={{ textAlign: \"center\", color: \"#888\" }}>\n//                   No adjustments found.\n//                 </td>\n//               </tr>\n//             )}\n//           </tbody>\n//         </table>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SalaryAdjustmentPage;\n\n\nimport React, { useEffect, useState } from \"react\";\nimport SalaryAdjustmentForm from \"./SalaryAdjustmentForm\";\nimport SalaryAdjustmentTable from \"./SalaryAdjustmentTable\";\nimport {\n  fetchAdjustments,\n  addAdjustment,\n  updateAdjustment,\n  deleteAdjustment\n} from \"./salaryAdjustmentService\";\nimport \"./SalaryAdjustmentPage.css\";\n\nconst SalaryAdjustmentPage = () => {\n  const [adjustments, setAdjustments] = useState([]);\n  const [form, setForm] = useState({ UserID: \"\", AdjustmentType: \"\", Amount: \"\", MonthYear: \"\", Remarks: \"\" });\n  const [editId, setEditId] = useState(null);\n\n  const loadAdjustments = async () => {\n    try {\n      const data = await fetchAdjustments();\n      setAdjustments(data);\n    } catch (err) {\n      alert(err?.message || \"Failed to fetch adjustments\");\n    }\n  };\n\n  useEffect(() => { loadAdjustments(); }, []);\n\n  const handleAdd = async (e) => {\n    e.preventDefault();\n    await addAdjustment(form);\n    setForm({ UserID: \"\", AdjustmentType: \"\", Amount: \"\", MonthYear: \"\", Remarks: \"\" });\n    loadAdjustments();\n  };\n\n  const handleUpdate = async (e) => {\n    e.preventDefault();\n    await updateAdjustment(editId, form);\n    setEditId(null);\n    setForm({ UserID: \"\", AdjustmentType: \"\", Amount: \"\", MonthYear: \"\", Remarks: \"\" });\n    loadAdjustments();\n  };\n\n  const handleDelete = async (id) => {\n    if (!window.confirm(\"Delete this adjustment?\")) return;\n    await deleteAdjustment(id);\n    loadAdjustments();\n  };\n\n  const handleEdit = (adj) => {\n    setEditId(adj.AdjustmentID || adj._id);\n    setForm({ UserID: adj.UserID, AdjustmentType: adj.AdjustmentType, Amount: adj.Amount, MonthYear: adj.MonthYear, Remarks: adj.Remarks });\n  };\n\n  return (\n    <div className=\"salary-adjustment-container\">\n      <h2 className=\"salary-adjustment-title\">Salary Adjustments</h2>\n      <SalaryAdjustmentForm\n        form={form}\n        setForm={setForm}\n        editId={editId}\n        setEditId={setEditId}\n        onAdd={handleAdd}\n        onUpdate={handleUpdate}\n      />\n      <SalaryAdjustmentTable\n        adjustments={adjustments}\n        onEdit={handleEdit}\n        onDelete={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default SalaryAdjustmentPage;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,oBAAoB,MAAM,wBAAwB;AA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}